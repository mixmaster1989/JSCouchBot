require('dotenv').config(); // –ü–æ–¥–∫–ª—é—á–∞–µ–º .env

const TelegramBot = require('node-telegram-bot-api');
const fs = require('fs');
const path = require('path');

// === –ö–æ–Ω—Ñ–∏–≥ ===
const TOKEN = process.env.BOT_TOKEN;
if (!TOKEN) {
  console.error('‚ùå BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env');
  process.exit(1);
}

const bot = new TelegramBot(TOKEN, { polling: true });

// === –ó–∞–≥—Ä—É–∑–∫–∞ –±–∞–∑—ã —É—Ä–æ–∫–æ–≤ ===
const lessonsPath = path.join(__dirname, 'data', 'lessons.json');
let lessons = [];

try {
  const data = fs.readFileSync(lessonsPath, 'utf-8');
  lessons = JSON.parse(data);
} catch (err) {
  console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —É—Ä–æ–∫–æ–≤:', err);
}

// === –•—Ä–∞–Ω–∏–ª–∏—â–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ (–≤ –±—É–¥—É—â–µ–º –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å —á–µ—Ä–µ–∑ –ë–î) ===
const userProgress = {};

// === –ö–æ–º–∞–Ω–¥–∞ /start ===
bot.onText(/\/start/, (msg) => {
  const chatId = msg.chat.id;
  bot.sendMessage(chatId, `üëã –ü—Ä–∏–≤–µ—Ç, ${msg.from.first_name}!\n\n–Ø ‚Äî JS CouchBot.\n–ë—É–¥—É —Ç–≤–æ–∏–º —Ç—Ä–µ–Ω–µ—Ä–æ–º –ø–æ JavaScript. –ì–æ—Ç–æ–≤ –Ω–∞—á–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ? –ù–∞–ø–∏—à–∏ /learn`);
});

// === –ö–æ–º–∞–Ω–¥–∞ /learn ===
bot.onText(/\/learn/, (msg) => {
  const chatId = msg.chat.id;
  const userId = msg.from.id;

  if (!lessons.length) {
    return bot.sendMessage(chatId, '‚ö†Ô∏è –ü–æ–∫–∞ –Ω–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —É—Ä–æ–∫–æ–≤.');
  }

  const lessonIndex = userProgress[userId] || 0;
  const lesson = lessons[lessonIndex];

  if (!lesson) {
    return bot.sendMessage(chatId, 'üéâ –¢—ã –ø—Ä–æ—à—ë–ª –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ —É—Ä–æ–∫–∏!');
  }

  bot.sendMessage(chatId, `üìò –£—Ä–æ–∫ ${lessonIndex + 1}: ${lesson.title}\n\n${lesson.content}\n\n–ö–æ–≥–¥–∞ –±—É–¥–µ—à—å –≥–æ—Ç–æ–≤ ‚Äî –Ω–∞–ø–∏—à–∏ /task`);
});

// === –ö–æ–º–∞–Ω–¥–∞ /task ===
bot.onText(/\/task/, (msg) => {
  const chatId = msg.chat.id;
  const userId = msg.from.id;

  const lessonIndex = userProgress[userId] || 0;
  const lesson = lessons[lessonIndex];

  if (!lesson || !lesson.task) {
    return bot.sendMessage(chatId, 'üõ† –ó–∞–¥–∞–Ω–∏—è –¥–ª—è —ç—Ç–æ–≥–æ —É—Ä–æ–∫–∞ –Ω–µ—Ç.');
  }

  bot.sendMessage(chatId, `üß† –ó–∞–¥–∞–Ω–∏–µ: ${lesson.task.question}`);
});

// === –û—Ç–≤–µ—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –∑–∞–¥–∞–Ω–∏–µ ===
bot.on('message', (msg) => {
  const chatId = msg.chat.id;
  const userId = msg.from.id;
  const text = msg.text;

  if (text.startsWith('/')) return;

  const lessonIndex = userProgress[userId] || 0;
  const lesson = lessons[lessonIndex];

  if (lesson && lesson.task && text.trim() === lesson.task.answer.trim()) {
    userProgress[userId] = lessonIndex + 1;
    bot.sendMessage(chatId, '‚úÖ –í–µ—Ä–Ω–æ! –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —É—Ä–æ–∫—É. –ù–∞–ø–∏—à–∏ /learn');
  } else if (lesson && lesson.task) {
    bot.sendMessage(chatId, '‚ùå –ù–µ–≤–µ—Ä–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑.');
  }
});
