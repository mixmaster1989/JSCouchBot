[
    {
      "title": "Введение в JavaScript",
      "content": "JavaScript — это язык программирования, который используется для создания интерактивных веб-страниц.",
      "task": {
        "question": "Какой язык используется для создания интерактивных веб-страниц?",
        "answer": "JavaScript",
        "wrongAnswers": ["Python", "HTML", "CSS"]
      }
    },
    {
      "title": "Переменные",
      "content": "В JavaScript переменные объявляются с помощью ключевых слов var, let или const.",
      "task": {
        "question": "Какое ключевое слово используется для объявления переменной?",
        "answer": "let",
        "wrongAnswers": ["var", "const", "variable"]
      }
    },
    {
      "title": "Типы данных",
      "content": "JavaScript поддерживает такие типы данных, как string, number, boolean, null, undefined, object и symbol.",
      "task": {
        "question": "Назовите один из типов данных в JavaScript.",
        "answer": "string",
        "wrongAnswers": ["integer", "float", "array"]
      }
    },
    {
      "title": "Условные операторы",
      "content": "Условные операторы, такие как if, else if и else, используются для выполнения кода в зависимости от условий.",
      "task": {
        "question": "Какой оператор используется для проверки условий?",
        "answer": "if",
        "wrongAnswers": ["else", "switch", "case"]
      }
    },
    {
      "title": "Циклы",
      "content": "Циклы, такие как for, while и do...while, используются для повторения выполнения кода.",
      "task": {
        "question": "Какой цикл используется для повторения выполнения кода?",
        "answer": "for",
        "wrongAnswers": ["while", "do", "repeat"]
      }
    },
    {
      "title": "Функции",
      "content": "Функции — это блоки кода, которые можно вызывать многократно.",
      "task": {
        "question": "Как называется блок кода, который можно вызывать многократно?",
        "answer": "Функция",
        "wrongAnswers": ["Цикл", "Переменная", "Объект"]
      }
    },
    {
      "title": "Массивы",
      "content": "Массивы используются для хранения упорядоченных коллекций данных.",
      "task": {
        "question": "Как называется структура данных для хранения упорядоченных коллекций?",
        "answer": "Массив",
        "wrongAnswers": ["Объект", "Функция", "Переменная"]
      }
    },
    {
      "title": "Объекты",
      "content": "Объекты используются для хранения данных в формате ключ-значение.",
      "task": {
        "question": "Как называется структура данных, которая хранит данные в формате ключ-значение?",
        "answer": "Объект",
        "wrongAnswers": ["Массив", "Функция", "Класс"]
      }
    },
    {
      "title": "Стрелочные функции",
      "content": "Стрелочные функции — это сокращённый синтаксис для объявления функций.",
      "task": {
        "question": "Как называется сокращённый синтаксис для объявления функций?",
        "answer": "Стрелочная функция",
        "wrongAnswers": ["Обычная функция", "Анонимная функция", "Класс"]
      }
    },
    {
      "title": "Шаблонные строки",
      "content": "Шаблонные строки позволяют вставлять переменные и выражения в строки с использованием синтаксиса `${}`.",
      "task": {
        "question": "Какой синтаксис используется для вставки переменных в шаблонные строки?",
        "answer": "${}",
        "wrongAnswers": ["{}", "[]", "<>"]
      }
    },
    {
      "title": "Деструктуризация",
      "content": "Деструктуризация позволяет извлекать значения из массивов или объектов в отдельные переменные.",
      "task": {
        "question": "Как называется процесс извлечения значений из массивов или объектов?",
        "answer": "Деструктуризация",
        "wrongAnswers": ["Рефакторинг", "Копирование", "Сериализация"]
      }
    },
    {
      "title": "Модули",
      "content": "Модули позволяют разделять код на отдельные файлы и импортировать их при необходимости.",
      "task": {
        "question": "Как называется механизм разделения кода на файлы?",
        "answer": "Модули",
        "wrongAnswers": ["Функции", "Классы", "Библиотеки"]
      }
    },
    {
      "title": "Асинхронность",
      "content": "Асинхронность позволяет выполнять операции, не блокируя основной поток выполнения.",
      "task": {
        "question": "Как называется механизм выполнения операций без блокировки основного потока?",
        "answer": "Асинхронность",
        "wrongAnswers": ["Синхронность", "Параллелизм", "Многопоточность"]
      }
    },
    {
      "title": "Промисы",
      "content": "Промисы используются для обработки асинхронных операций.",
      "task": {
        "question": "Как называется объект для обработки асинхронных операций?",
        "answer": "Промис",
        "wrongAnswers": ["Колбэк", "Функция", "Объект"]
      }
    },
    {
      "title": "Async/Await",
      "content": "Async/Await — это синтаксис для работы с асинхронным кодом, который делает его более читаемым.",
      "task": {
        "question": "Какой синтаксис используется для упрощения работы с асинхронным кодом?",
        "answer": "Async/Await",
        "wrongAnswers": ["Promise", "Callback", "Event Loop"]
      }
    },
    {
      "title": "DOM",
      "content": "DOM (Document Object Model) — это интерфейс для взаимодействия с HTML-документом.",
      "task": {
        "question": "Как называется интерфейс для взаимодействия с HTML-документом?",
        "answer": "DOM",
        "wrongAnswers": ["CSSOM", "BOM", "API"]
      }
    },
    {
      "title": "События",
      "content": "События используются для обработки взаимодействий пользователя с веб-страницей.",
      "task": {
        "question": "Как называется механизм обработки взаимодействий пользователя с веб-страницей?",
        "answer": "События",
        "wrongAnswers": ["Функции", "Обработчики", "Слушатели"]
      }
    },
    {
      "title": "Fetch API",
      "content": "Fetch API используется для выполнения HTTP-запросов.",
      "task": {
        "question": "Какой API используется для выполнения HTTP-запросов?",
        "answer": "Fetch API",
        "wrongAnswers": ["XMLHttpRequest", "REST API", "GraphQL"]
      }
    },
    {
      "title": "Локальное хранилище",
      "content": "Локальное хранилище позволяет сохранять данные в браузере.",
      "task": {
        "question": "Как называется механизм сохранения данных в браузере?",
        "answer": "Локальное хранилище",
        "wrongAnswers": ["Сессия", "Куки", "Кэш"]
      }
    },
    {
      "title": "Классы",
      "content": "Классы — это синтаксис для создания объектов и работы с ними.",
      "task": {
        "question": "Как называется синтаксис для создания объектов?",
        "answer": "Классы",
        "wrongAnswers": ["Функции", "Прототипы", "Модули"]
      }
    },
    {
      "title": "Консоль",
      "content": "Метод console.log() используется для вывода информации в консоль.",
      "task": {
        "question": "Какой метод используется для вывода информации в консоль?",
        "answer": "console.log",
        "wrongAnswers": ["console.write", "console.print", "console.output"]
      }
    },
    {
      "title": "Операторы сравнения",
      "content": "Операторы сравнения, такие как ==, ===, !=, !==, используются для сравнения значений.",
      "task": {
        "question": "Какой оператор используется для строгого сравнения?",
        "answer": "===",
        "wrongAnswers": ["==", "!=", "!=="]
      }
    },
    {
      "title": "Логические операторы",
      "content": "Логические операторы, такие как &&, || и !, используются для работы с логическими значениями.",
      "task": {
        "question": "Какой оператор используется для логического И?",
        "answer": "&&",
        "wrongAnswers": ["||", "!", "&"]
      }
    },
    {
      "title": "Математические операторы",
      "content": "Математические операторы, такие как +, -, *, /, используются для выполнения арифметических операций.",
      "task": {
        "question": "Какой оператор используется для умножения?",
        "answer": "*",
        "wrongAnswers": ["+", "-", "/"]
      }
    },
    {
      "title": "Инкремент и декремент",
      "content": "Операторы ++ и -- используются для увеличения или уменьшения значения переменной на единицу.",
      "task": {
        "question": "Какой оператор используется для увеличения значения переменной на единицу?",
        "answer": "++",
        "wrongAnswers": ["--", "+=", "-="]
      }
    },
    {
      "title": "Условный оператор",
      "content": "Условный оператор (тернарный оператор) используется для выполнения одного из двух выражений в зависимости от условия.",
      "task": {
        "question": "Как называется оператор, который выбирает одно из двух выражений в зависимости от условия?",
        "answer": "Тернарный оператор",
        "wrongAnswers": ["Логический оператор", "Условный оператор if", "Цикл"]
      }
    },
    {
      "title": "Преобразование типов",
      "content": "JavaScript позволяет преобразовывать значения из одного типа в другой, например, с помощью Number(), String() и Boolean().",
      "task": {
        "question": "Какой метод используется для преобразования строки в число?",
        "answer": "Number()",
        "wrongAnswers": ["String()", "Boolean()", "Parse()"]
      }
    },
    {
      "title": "Шаблонные строки",
      "content": "Шаблонные строки позволяют вставлять переменные и выражения в строки с использованием синтаксиса `${}`.",
      "task": {
        "question": "Какой символ используется для обозначения шаблонной строки?",
        "answer": "`",
        "wrongAnswers": ["'", "\"", "~"]
      }
    },
    {
      "title": "Область видимости",
      "content": "Область видимости определяет, где переменные доступны для использования.",
      "task": {
        "question": "Как называется область, в которой переменная доступна для использования?",
        "answer": "Область видимости",
        "wrongAnswers": ["Контекст", "Замыкание", "Функция"]
      }
    },
    {
      "title": "Строгий режим",
      "content": "Строгий режим ('use strict') помогает писать более безопасный код, запрещая использование некоторых небезопасных конструкций.",
      "task": {
        "question": "Как называется режим, который помогает писать более безопасный код?",
        "answer": "Строгий режим",
        "wrongAnswers": ["Безопасный режим", "Режим отладки", "Режим совместимости"]
      }
    },
    {
      "title": "Массивы: методы",
      "content": "Методы массивов, такие как push(), pop(), shift(), unshift(), используются для добавления и удаления элементов.",
      "task": {
        "question": "Какой метод массива используется для добавления элемента в конец?",
        "answer": "push",
        "wrongAnswers": ["pop", "shift", "unshift"]
      }
    },
    {
      "title": "Цикл for...of",
      "content": "Цикл for...of используется для перебора элементов массива или других итерируемых объектов.",
      "task": {
        "question": "Какой цикл используется для перебора элементов массива?",
        "answer": "for...of",
        "wrongAnswers": ["for", "while", "do...while"]
      }
    },
    {
      "title": "Цикл for...in",
      "content": "Цикл for...in используется для перебора свойств объекта.",
      "task": {
        "question": "Какой цикл используется для перебора свойств объекта?",
        "answer": "for...in",
        "wrongAnswers": ["for...of", "while", "do...while"]
      }
    },
    {
      "title": "Math",
      "content": "Объект Math предоставляет математические функции и константы, такие как Math.random() и Math.PI.",
      "task": {
        "question": "Какой метод объекта Math используется для генерации случайного числа?",
        "answer": "Math.random",
        "wrongAnswers": ["Math.floor", "Math.ceil", "Math.round"]
      }
    },
    {
      "title": "Date",
      "content": "Объект Date используется для работы с датами и временем.",
      "task": {
        "question": "Какой объект используется для работы с датами и временем?",
        "answer": "Date",
        "wrongAnswers": ["Time", "Calendar", "Moment"]
      }
    },
    {
      "title": "JSON",
      "content": "JSON (JavaScript Object Notation) используется для передачи данных в формате ключ-значение.",
      "task": {
        "question": "Какой формат используется для передачи данных в формате ключ-значение?",
        "answer": "JSON",
        "wrongAnswers": ["XML", "HTML", "CSV"]
      }
    },
    {
      "title": "setTimeout",
      "content": "Функция setTimeout позволяет выполнять код с задержкой.",
      "task": {
        "question": "Как называется функция, которая выполняет код с задержкой?",
        "answer": "setTimeout",
        "wrongAnswers": ["setInterval", "delay", "wait"]
      }
    },
    {
      "title": "setInterval",
      "content": "Функция setInterval позволяет выполнять код через определённые интервалы времени.",
      "task": {
        "question": "Как называется функция, которая выполняет код через определённые интервалы времени?",
        "answer": "setInterval",
        "wrongAnswers": ["setTimeout", "repeat", "loop"]
      }
    },
    {
      "title": "Обработка ошибок",
      "content": "Конструкция try...catch используется для обработки ошибок в коде.",
      "task": {
        "question": "Как называется конструкция, используемая для обработки ошибок?",
        "answer": "try...catch",
        "wrongAnswers": ["if...else", "throw", "catch...finally"]
      }
    },
    {
      "title": "Ключевое слово this",
      "content": "Ключевое слово this ссылается на текущий объект в зависимости от контекста вызова.",
      "task": {
        "question": "Какое ключевое слово ссылается на текущий объект?",
        "answer": "this",
        "wrongAnswers": ["self", "context", "object"]
      }
    },
    {
      "title": "Замыкания",
      "content": "Замыкания позволяют функции запоминать переменные из внешнего окружения, даже если эта функция вызывается вне этого окружения.",
      "task": {
        "question": "Как называется механизм, позволяющий функции запоминать переменные из внешнего окружения?",
        "answer": "Замыкание",
        "wrongAnswers": ["Контекст", "Область видимости", "Функция"]
      }
    },
    {
      "title": "Контекст вызова",
      "content": "Контекст вызова (`this`) зависит от того, как была вызвана функция.",
      "task": {
        "question": "Как называется объект, определяющий контекст вызова функции?",
        "answer": "this",
        "wrongAnswers": ["window", "function", "scope"]
      }
    },
    {
      "title": "Прототипы",
      "content": "Прототипы позволяют объектам наследовать свойства и методы других объектов.",
      "task": {
        "question": "Как называется механизм, позволяющий объектам наследовать свойства и методы?",
        "answer": "Прототип",
        "wrongAnswers": ["Класс", "Функция", "Массив"]
      }
    },
    {
      "title": "Асинхронные функции",
      "content": "Асинхронные функции позволяют писать асинхронный код, который выглядит как синхронный.",
      "task": {
        "question": "Как называется функция, которая позволяет писать асинхронный код в синхронном стиле?",
        "answer": "async",
        "wrongAnswers": ["await", "promise", "callback"]
      }
    },
    {
      "title": "Модули ES6",
      "content": "Модули ES6 позволяют импортировать и экспортировать код между файлами.",
      "task": {
        "question": "Как называется механизм в ES6 для разделения кода на файлы?",
        "answer": "Модули",
        "wrongAnswers": ["Классы", "Функции", "Объекты"]
      }
    },
    {
      "title": "Promise",
      "content": "Promise — это объект, представляющий результат асинхронной операции.",
      "task": {
        "question": "Как называется объект, представляющий результат асинхронной операции?",
        "answer": "Promise",
        "wrongAnswers": ["Callback", "Async", "Await"]
      }
    },
    {
      "title": "Event Loop",
      "content": "Event Loop — это механизм, который позволяет JavaScript обрабатывать асинхронные операции.",
      "task": {
        "question": "Как называется механизм, который позволяет JavaScript обрабатывать асинхронные операции?",
        "answer": "Event Loop",
        "wrongAnswers": ["Callback Queue", "Promise", "Thread"]
      }
    },
    {
      "title": "Set и Map",
      "content": "Set и Map — это структуры данных, добавленные в ES6 для работы с уникальными значениями и парами ключ-значение.",
      "task": {
        "question": "Как называется структура данных для хранения уникальных значений?",
        "answer": "Set",
        "wrongAnswers": ["Map", "Array", "Object"]
      }
    },
    {
      "title": "WeakMap и WeakSet",
      "content": "WeakMap и WeakSet — это структуры данных, которые позволяют хранить слабые ссылки на объекты.",
      "task": {
        "question": "Как называется структура данных, которая позволяет хранить слабые ссылки на объекты?",
        "answer": "WeakMap",
        "wrongAnswers": ["WeakSet", "Map", "Set"]
      }
    },
    {
      "title": "Деструктуризация",
      "content": "Деструктуризация позволяет извлекать значения из массивов или объектов в отдельные переменные.",
      "task": {
        "question": "Как называется процесс извлечения значений из массивов или объектов?",
        "answer": "Деструктуризация",
        "wrongAnswers": ["Рефакторинг", "Копирование", "Сериализация"]
      }
    },
    {
      "title": "Spread и Rest операторы",
      "content": "Spread и Rest операторы позволяют работать с массивами и объектами более удобно.",
      "task": {
        "question": "Как называется оператор, который позволяет разворачивать массивы или объекты?",
        "answer": "Spread",
        "wrongAnswers": ["Rest", "Destructuring", "Concat"]
      }
    },
    {
      "title": "Классы ES6",
      "content": "Классы ES6 предоставляют синтаксический сахар для работы с прототипами.",
      "task": {
        "question": "Как называется синтаксический сахар для работы с прототипами?",
        "answer": "Классы",
        "wrongAnswers": ["Функции", "Модули", "Объекты"]
      }
    },
    {
      "title": "Геттеры и сеттеры",
      "content": "Геттеры и сеттеры позволяют управлять доступом к свойствам объектов.",
      "task": {
        "question": "Как называются методы, которые управляют доступом к свойствам объектов?",
        "answer": "Геттеры и сеттеры",
        "wrongAnswers": ["Методы", "Функции", "Классы"]
      }
    },
    {
      "title": "Proxy",
      "content": "Proxy позволяет перехватывать операции с объектами и изменять их поведение.",
      "task": {
        "question": "Как называется объект, который позволяет перехватывать операции с другими объектами?",
        "answer": "Proxy",
        "wrongAnswers": ["Reflect", "Handler", "Interceptor"]
      }
    },
    {
      "title": "Reflect",
      "content": "Reflect предоставляет методы для работы с объектами и их свойствами.",
      "task": {
        "question": "Как называется объект, предоставляющий методы для работы с объектами?",
        "answer": "Reflect",
        "wrongAnswers": ["Proxy", "Object", "Handler"]
      }
    },
    {
      "title": "Модули CommonJS",
      "content": "CommonJS — это стандарт для модулей в Node.js.",
      "task": {
        "question": "Как называется стандарт модулей в Node.js?",
        "answer": "CommonJS",
        "wrongAnswers": ["ES6 Modules", "AMD", "UMD"]
      }
    },
    {
      "title": "Асинхронные итераторы",
      "content": "Асинхронные итераторы позволяют перебирать данные, которые поступают асинхронно.",
      "task": {
        "question": "Как называется механизм для перебора данных, поступающих асинхронно?",
        "answer": "Асинхронные итераторы",
        "wrongAnswers": ["Promise", "Callback", "Event Loop"]
      }
    },
    {
      "title": "Генераторы",
      "content": "Генераторы позволяют создавать функции, которые могут приостанавливать своё выполнение.",
      "task": {
        "question": "Как называется функция, которая может приостанавливать своё выполнение?",
        "answer": "Генератор",
        "wrongAnswers": ["Итератор", "Callback", "Promise"]
      }
    },
    {
      "title": "Web Workers",
      "content": "Web Workers позволяют выполнять код в отдельных потоках.",
      "task": {
        "question": "Как называется механизм для выполнения кода в отдельных потоках?",
        "answer": "Web Workers",
        "wrongAnswers": ["Threads", "Event Loop", "Async"]
      }
    },
    {
      "title": "Service Workers",
      "content": "Service Workers позволяют создавать оффлайн-приложения и кэшировать ресурсы.",
      "task": {
        "question": "Как называется механизм для создания оффлайн-приложений?",
        "answer": "Service Workers",
        "wrongAnswers": ["Web Workers", "Cache API", "IndexedDB"]
      }
    }
]