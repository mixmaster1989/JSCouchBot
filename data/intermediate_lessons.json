[
  {
    "title": "Замыкания",
    "content": "Замыкания позволяют функции запоминать переменные из внешнего окружения, даже если эта функция вызывается вне этого окружения.",
    "task": {
      "question": "Как называется механизм, позволяющий функции запоминать переменные из внешнего окружения?",
      "answer": "Замыкание",
      "wrongAnswers": ["Контекст", "Область видимости", "Функция"]
    }
  },
  {
    "title": "Контекст вызова",
    "content": "Контекст вызова (`this`) зависит от того, как была вызвана функция.",
    "task": {
      "question": "Как называется объект, определяющий контекст вызова функции?",
      "answer": "this",
      "wrongAnswers": ["window", "function", "scope"]
    }
  },
  {
    "title": "Прототипы",
    "content": "Прототипы позволяют объектам наследовать свойства и методы других объектов.",
    "task": {
      "question": "Как называется механизм, позволяющий объектам наследовать свойства и методы?",
      "answer": "Прототип",
      "wrongAnswers": ["Класс", "Функция", "Массив"]
    }
  },
  {
    "title": "Асинхронные функции",
    "content": "Асинхронные функции позволяют писать асинхронный код, который выглядит как синхронный.",
    "task": {
      "question": "Как называется функция, которая позволяет писать асинхронный код в синхронном стиле?",
      "answer": "async",
      "wrongAnswers": ["await", "promise", "callback"]
    }
  },
  {
    "title": "Модули ES6",
    "content": "Модули ES6 позволяют импортировать и экспортировать код между файлами.",
    "task": {
      "question": "Как называется механизм в ES6 для разделения кода на файлы?",
      "answer": "Модули",
      "wrongAnswers": ["Классы", "Функции", "Объекты"]
    }
  }
]